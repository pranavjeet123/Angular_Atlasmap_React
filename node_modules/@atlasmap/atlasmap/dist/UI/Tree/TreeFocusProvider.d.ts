import { FocusEvent, FunctionComponent, KeyboardEvent, MouseEvent as ReactMouseEvent, RefObject } from 'react';
export declare const TreeFocusProvider: FunctionComponent;
export interface IUseTreeFocusProps {
    ref: RefObject<HTMLDivElement | null>;
    isExpandable?: boolean;
    isExpanded?: boolean;
    collapseTreeitem?: () => void;
    expandTreeitem?: () => void;
}
export declare const useTreeFocus: ({ ref, isExpandable, isExpanded, collapseTreeitem, expandTreeitem, }: IUseTreeFocusProps) => {
    focused: boolean | null;
    handlers: {
        onKeyDown: (event: KeyboardEvent) => void;
        onClick: (event: ReactMouseEvent<HTMLElement>) => void;
        onBlur: (event: FocusEvent<HTMLElement>) => void;
    };
};
//# sourceMappingURL=TreeFocusProvider.d.ts.map