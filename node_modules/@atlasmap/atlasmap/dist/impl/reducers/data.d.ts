import { IAtlasmapDocument, IAtlasmapMapping } from '../../Views';
import { IAtlasmapField } from './../../Views/models';
export interface DataAction {
    type: 'reset' | 'loading' | 'update' | 'error';
    payload?: DataActionPayload;
}
export interface DataActionPayload {
    pending?: boolean;
    error?: boolean;
    sources?: IAtlasmapDocument[];
    targets?: IAtlasmapDocument[];
    constants?: IAtlasmapDocument | null;
    mappings?: IAtlasmapMapping[];
    selectedMapping?: IAtlasmapMapping | null;
    sourcesFilter?: string;
    sourceProperties?: IAtlasmapDocument | null;
    targetsFilter?: string;
    targetProperties?: IAtlasmapDocument | null;
    flatSources?: IAtlasmapField[];
    flatTargets?: IAtlasmapField[];
}
export interface IDataState {
    pending: boolean;
    error: boolean;
    sources: IAtlasmapDocument[];
    targets: IAtlasmapDocument[];
    sourceProperties: IAtlasmapDocument | null;
    targetProperties: IAtlasmapDocument | null;
    constants: IAtlasmapDocument | null;
    mappings: IAtlasmapMapping[];
    selectedMapping: IAtlasmapMapping | null;
    flatSources: IAtlasmapField[];
    flatTargets: IAtlasmapField[];
}
export declare function initDataState(): IDataState;
export declare function dataReducer(state: IDataState, action: DataAction): IDataState;
//# sourceMappingURL=data.d.ts.map