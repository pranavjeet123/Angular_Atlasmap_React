import { IConstant, IDocumentName, INamespace, IProperty } from '../UI';
import React from 'react';
import { IAtlasmapDocument } from '../Views';
export interface IUseAtlasmapDialogsProps {
    modalContainer: HTMLElement;
}
export declare function useAtlasmapDialogs({ modalContainer, }: IUseAtlasmapDialogsProps): {
    handlers: {
        onImportADMArchive: (file: File) => void;
        onExportADMArchive: () => void;
        onCreateConstant: (constants: IAtlasmapDocument | null, addToActiveMapping?: boolean | undefined) => void;
        onDeleteConstant: (constName: string) => void;
        onEditConstant: (constant: IConstant, constants: IAtlasmapDocument | null) => void;
        onCreateProperty: (isSource: boolean, properties: IAtlasmapDocument | null, addToActiveMapping?: boolean | undefined) => void;
        onDeleteProperty: (propName: string, propScope: string, isSource: boolean) => void;
        onEditProperty: (property: IProperty, isSource: boolean, properties: IAtlasmapDocument | null) => void;
        onResetAtlasmap: () => void;
        onAbout: () => void;
        onImportDocument: (selectedFile: File, isSource: boolean) => void;
        onDeleteDocument: (id: string, isSource: boolean) => void;
        onSpecifyInstanceSchema: (cb: (isSchema: boolean) => void) => void;
        onCaptureDocumentID: (documentId: string) => void;
        onChangeDocumentName: (docNameInfo: IDocumentName) => void;
        onRemoveMappedField: (cb: () => void) => void;
        onDeleteMapping: (mapping: import("../Views").IAtlasmapMapping) => void;
        onDeleteSelectedMapping: () => void;
        onEnableCustomClass: (isSource: boolean) => void;
        onCreateNamespace: (docName: string) => void;
        onEditNamespace: (docName: string, namespace: INamespace) => void;
        deleteNamespace: typeof import("./utils").deleteNamespace;
        onToggleExpressionMode: () => void;
        onEditMappingEnumeration: (cb: () => void) => void;
        onEditCSVParams: (docId: string, isSource: boolean) => void;
    };
    dialogs: React.ReactPortal;
};
//# sourceMappingURL=useAtlasmapDialogs.d.ts.map