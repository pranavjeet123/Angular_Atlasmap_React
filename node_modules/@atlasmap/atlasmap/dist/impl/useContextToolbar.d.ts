/// <reference types="react" />
export declare type Views = 'ColumnMapper' | 'MappingTable' | 'NamespaceTable' | 'FreeView';
export interface IUseContextToolbarHandlers {
    onImportADMArchiveFile: (file: File) => void;
    onImportJarFile: (file: File) => void;
    onExportAtlasFile: () => void;
    onResetAtlasmap: () => void;
    onAbout: () => void;
}
export interface IUseContextToolbarData {
    showImportAtlasFileToolbarItem?: boolean;
    showImportJarFileToolbarItem?: boolean;
    showExportAtlasFileToolbarItem?: boolean;
    showResetToolbarItem?: boolean;
    showColumnMapperViewToolbarItem?: boolean;
    showMappingTableViewToolbarItem?: boolean;
    showNamespaceTableViewToolbarItem?: boolean;
    showToggleMappingPreviewToolbarItem?: boolean;
    showToggleTypesToolbarItem?: boolean;
    showToggleMappedFieldsToolbarItem?: boolean;
    showToggleUnmappedFieldsToolbarItem?: boolean;
    showAddNewMappingToolbarItem?: boolean;
}
export declare function useContextToolbar({ showImportAtlasFileToolbarItem, showImportJarFileToolbarItem, showExportAtlasFileToolbarItem, showResetToolbarItem, showColumnMapperViewToolbarItem, showMappingTableViewToolbarItem, showNamespaceTableViewToolbarItem, showToggleMappingPreviewToolbarItem, showToggleTypesToolbarItem, showToggleMappedFieldsToolbarItem, showToggleUnmappedFieldsToolbarItem, showAddNewMappingToolbarItem, onImportADMArchiveFile, onImportJarFile, onExportAtlasFile, onResetAtlasmap, onAbout, }: IUseContextToolbarData & IUseContextToolbarHandlers): {
    activeView: Views;
    showMappingPreview: boolean;
    showTypes: boolean;
    showMappedFields: boolean;
    showUnmappedFields: boolean;
    contextToolbar: JSX.Element;
};
//# sourceMappingURL=useContextToolbar.d.ts.map