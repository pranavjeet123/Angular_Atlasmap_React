import { ExpressionModel, MappedField, MappingModel } from '@atlasmap/core';
export declare const trailerId = "expression-trailer";
export declare abstract class ExpressionNode {
    protected static sequence: number;
    protected uuid: string;
    constructor(prefix: string);
    getUuid(): string;
    abstract toText(): string;
    abstract toHTML(): string;
}
export declare class TextNode extends ExpressionNode {
    str: string;
    static readonly PREFIX = "expression-text-";
    constructor(str: string);
    toText(): string;
    toHTML(): string;
}
export declare class FieldNode extends ExpressionNode {
    private mapping;
    mfield?: MappedField | undefined;
    protected field: MappedField | null | undefined;
    static readonly PREFIX = "expression-field-";
    constructor(mapping: MappingModel, mfield?: MappedField | undefined, index?: number);
    toText(): string;
    toHTML(): string;
}
export declare function getExpression(): ExpressionModel | null | undefined;
export declare function getMappingExpression(): string;
//# sourceMappingURL=expression.d.ts.map