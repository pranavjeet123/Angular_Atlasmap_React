import { IDocument, IField, IStringList, InspectionType } from '../common';
/**
 * The JSON inspection data model contracts between frontend and backend.
 */
export declare const JSON_MODEL_PACKAGE_PREFIX = "io.atlasmap.json.v2";
export declare const JSON_DATA_SOURCE_JSON_TYPE: string;
export declare const JSON_ENUM_FIELD_JSON_TYPE: string;
export declare const JSON_INSPECTION_REQUEST_JSON_TYPE: string;
/**
 * The root object that carries {@link IJsonInspectionRequest}
 * when it's sent to backend.
 */
export interface IJsonInspectionRequestContainer {
    JsonInspectionRequest: IJsonInspectionRequest;
}
/**
 * The serialized JSON inspection request.
 */
export interface IJsonInspectionRequest {
    fieldNameExclusions?: IStringList;
    typeNameExclusions?: IStringList;
    namespaceExclusions?: IStringList;
    jsonData?: string;
    uri?: string;
    type: InspectionType;
}
/**
 * The root object that carries {@link IJsonInspectionResponse}
 * when it's received from backend.
 */
export interface IJsonInspectionResponseContainer {
    JsonInspectionResponse: IJsonInspectionResponse;
}
/**
 * The serialized JSON inspection response.
 */
export interface IJsonInspectionResponse {
    jsonDocument: IJsonDocument;
    errorMessage?: string;
    executionTime?: number;
}
/**
 * The root object that carries {@link IJsonDocument}
 * when it's inspected with maven plugin.
 */
export interface IJsonDocumentContainer {
    JsonDocument: IJsonDocument;
}
/**
 * The serialized JSON document inspection result.
 */
export interface IJsonDocument extends IDocument {
}
/**
 * The serialized JSON primitive field in inspection result.
 */
export interface IJsonField extends IField {
    primitive: boolean;
    typeName: string;
    userCreated?: boolean;
}
/**
 * The serialized JSON complex field in inspection result.
 */
export interface IJsonComplexType extends IJsonField {
    jsonFields?: IJsonFields;
    jsonEnumFields?: IJsonEnumFields;
    enumeration: boolean;
    uri?: string;
}
/**
 * The container of JSON field.
 */
export interface IJsonFields {
    jsonField: IJsonField[];
}
/**
 * The container of JSON enum field.
 */
export interface IJsonEnumFields {
    jsonEnumField: IJsonEnumField[];
}
/**
 * The serialized JSON enum field.
 */
export interface IJsonEnumField extends IField {
    ordinal: number;
    typeName: string;
    userCreated?: boolean;
}
//# sourceMappingURL=json.d.ts.map