import { IMapping } from './mapping';
/**
 * The mapping Data model contracts between frontend and backend.
 */
export declare const PROCESS_MAPPING_REQUEST_JSON_TYPE: string;
/**
 * The root object that carries {@link IProcessMappingRequest}
 * when it's sent to backend.
 */
export interface IProcessMappingRequestContainer {
    ProcessMappingRequest: IProcessMappingRequest;
}
/**
 * The serialized process mapping request object.
 */
export interface IProcessMappingRequest {
    jsonType: string;
    mapping: IMapping;
}
/**
 * The root object that carries {@link IProcessMappingResponse}
 * when it's received from backend.
 */
export interface IProcessMappingResponseContainer {
    ProcessMappingResponse: IProcessMappingResponse;
}
/**
 * The serialized process mapping response object.
 */
export interface IProcessMappingResponse {
    jsonType: string;
    mapping: IMapping;
    audits: IAudits;
}
/**
 * The container of serialized {@link IAudit}.
 */
export interface IAudits {
    audit: IAudit[];
}
/**
 * The serialized audit object which is logged during processing a mapping.
 */
export interface IAudit {
    message?: string;
    docId?: string;
    docName?: string;
    path?: string;
    value?: string;
    status: AuditStatus;
}
export declare enum AuditStatus {
    INFO = "INFO",
    WARN = "WARN",
    ERROR = "ERROR"
}
//# sourceMappingURL=mapping-preview.d.ts.map