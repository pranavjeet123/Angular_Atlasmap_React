import { MappedField, MappingModel } from './mapping.model';
export declare enum ErrorLevel {
    DEBUG = "DEBUG",
    INFO = "INFO",
    WARN = "WARN",
    ERROR = "ERROR"
}
export declare enum ErrorScope {
    APPLICATION = "APPLICATION",
    DATA_SOURCE = "DATA_SOURCE",
    LOOKUP_TABLE = "LOOKUP_TABLE",
    MAPPING = "MAPPING",
    FIELD = "FIELD",
    FORM = "FORM",
    CONSTANT = "CONSTANT",
    PROPERTY = "PROPERTY"
}
export declare enum ErrorType {
    INTERNAL = "INTERNAL",
    USER = "USER",
    VALIDATION = "VALIDATION",
    PREVIEW = "PREVIEW",
    FORM = "FORM"
}
export declare class ErrorInfo {
    private static errorIdentifierCounter;
    private _identifier;
    message: string;
    level: ErrorLevel;
    scope: ErrorScope;
    type: ErrorType;
    mapping: MappingModel;
    field: MappedField;
    object: any;
    constructor(init: Partial<ErrorInfo>);
    get identifier(): string;
}
//# sourceMappingURL=error.model.d.ts.map