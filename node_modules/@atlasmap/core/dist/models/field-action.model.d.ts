import { FieldType } from '../contracts';
import { Multiplicity } from '../contracts/field-action';
export declare class FieldActionArgument {
    name: string;
    type: FieldType;
    values: string[] | null;
    serviceObject: any;
}
export declare class FieldActionArgumentValue {
    label: string;
    name: string;
    value: string;
}
export declare class FieldActionDefinition {
    name: string;
    isCustom: boolean;
    arguments: FieldActionArgument[];
    method: string;
    sourceType: FieldType;
    targetType: FieldType;
    multiplicity: Multiplicity;
    serviceObject: any;
    populateFieldAction(action: FieldAction): void;
    getArgumentForName(name: string): FieldActionArgument;
}
export declare class FieldAction {
    name: string;
    definition: FieldActionDefinition | null;
    argumentValues: FieldActionArgumentValue[];
    static create(definition: FieldActionDefinition): FieldAction;
    getArgumentValue(argumentName: string): FieldActionArgumentValue;
    setArgumentValue(argumentName: string, value: string): void;
}
//# sourceMappingURL=field-action.model.d.ts.map