import { MappedField, MappingModel } from '../models/mapping.model';
import { ConfigModel } from '../models/config.model';
import { IField } from '../contracts/common';
/**
 * Static routines for handling mappings.
 */
export declare class MappingUtil {
    static updateMappingsFromDocuments(cfg: ConfigModel): void;
    static updateMappedFieldsFromDocuments(mapping: MappingModel, cfg: ConfigModel, isSource: boolean): void;
    /**
     * Check all mappings in the current context and remove if it refers to un-existing fields.
     *
     * @param cfg ConfigModel
     */
    static removeStaleMappings(cfg: ConfigModel): void;
    private static isMappingStale;
    static updateDocumentNamespacesFromMappings(cfg: ConfigModel): void;
    private static getDocById;
    static activeMapping(cfg: ConfigModel): boolean;
    /**
     * Return true if the specified mapped field array has any established field actions,
     * false otherwise.
     *
     * @param fields
     */
    static hasFieldAction(fields: MappedField[]): boolean;
    static hasMappedCollection(mapping: MappingModel, isSource: boolean): boolean | null;
    static isPropertyField(field: IField): boolean;
    static isConstantField(field: IField): boolean;
}
//# sourceMappingURL=mapping-util.d.ts.map