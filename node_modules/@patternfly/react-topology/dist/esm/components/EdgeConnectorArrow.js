import { __rest } from "tslib";
import * as React from 'react';
import { observer } from 'mobx-react';
import * as _ from 'lodash';
import ConnectorArrow from './ConnectorArrow';
const EdgeConnectorArrow = (_a) => {
    var { edge, isTarget = true } = _a, others = __rest(_a, ["edge", "isTarget"]);
    const bendPoints = edge.getBendpoints();
    const startPoint = isTarget ? _.last(bendPoints) || edge.getStartPoint() : _.head(bendPoints) || edge.getEndPoint();
    const endPoint = isTarget ? edge.getEndPoint() : edge.getStartPoint();
    return React.createElement(ConnectorArrow, Object.assign({ startPoint: startPoint, endPoint: endPoint }, others));
};
export default observer(EdgeConnectorArrow);
//# sourceMappingURL=EdgeConnectorArrow.js.map