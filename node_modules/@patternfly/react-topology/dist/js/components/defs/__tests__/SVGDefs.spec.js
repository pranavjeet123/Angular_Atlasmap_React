"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const React = tslib_1.__importStar(require("react"));
const enzyme_1 = require("enzyme");
const SVGDefs_1 = tslib_1.__importDefault(require("../SVGDefs"));
const SVGDefsSetter_1 = require("../SVGDefsSetter");
const SVGDefsContext_1 = tslib_1.__importDefault(require("../SVGDefsContext"));
describe('SVGDefs', () => {
    it('should get #addDef and #removeDef from context', () => {
        const contextProps = {
            addDef: jest.fn(),
            removeDef: jest.fn(),
        };
        const props = {
            id: 'foo',
            children: React.createElement("span", null),
        };
        const wrapper = enzyme_1.mount(React.createElement(SVGDefsContext_1.default.Provider, { value: contextProps },
            React.createElement(SVGDefs_1.default, Object.assign({}, props))));
        const innerWrapper = wrapper.find(SVGDefsSetter_1.SVGDefsSetter).first();
        expect(innerWrapper.props()).toEqual(Object.assign(Object.assign({}, contextProps), props));
    });
});
describe('SVGDefsSetter', () => {
    it('should callback #addDef and #removeDef on update', () => {
        const props = {
            id: 'foo',
            addDef: jest.fn(),
            removeDef: jest.fn(),
            children: React.createElement("span", null),
        };
        const wrapper = enzyme_1.mount(React.createElement(SVGDefsSetter_1.SVGDefsSetter, Object.assign({}, props)));
        expect(props.addDef).toHaveBeenCalledWith(props.id, props.children);
        // test update
        const newChild = React.createElement("span", null);
        wrapper.setProps({ children: newChild });
        expect(props.addDef).toHaveBeenCalledTimes(2);
        expect(props.addDef).toHaveBeenLastCalledWith(props.id, newChild);
        // test unmount
        wrapper.unmount();
        expect(props.removeDef).toHaveBeenCalledTimes(1);
        expect(props.removeDef).toHaveBeenLastCalledWith(props.id);
    });
});
//# sourceMappingURL=SVGDefs.spec.js.map